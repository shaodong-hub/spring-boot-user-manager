
# --------------------------------------------------------------------------------
server.port=8788
# --------------------------------------------------------------------------------
# Session
spring.session.timeout=10m
spring.session.store-type=REDIS
#spring.session.redis.flush-mode=IMMEDIATE
spring.session.redis.namespace=spring:session
#spring.session.redis.configure-action=notify_keyspace_events
#spring.session.redis.save-mode=ON_SET_ATTRIBUTE
# --------------------------------------------------------------------------------
# 缓存相关配置
spring.cache.type=redis
spring.cache.redis.key-prefix=user_manager:
spring.cache.redis.time-to-live=60000
spring.cache.cache-names=user,role
spring.cache.redis.cache-null-values=true
# --------------------------------------------------------------------------------
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=123456
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-active=10
# --------------------------------------------------------------------------------
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/user_manager?serverTimezone=Asia/Shanghai&Unicode=true&characterEncoding=utf-8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
# --------------------------------------------------------------------------------
# create：每次加载 hibernate 时都会删除上一次的生成的表，然后根据你的 model 类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。[删除-创建-操作]
# create-drop ：每次加载 hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭，表就自动删除。[删除-创建-操作-再删除]
# update：最常用的属性，第一次加载 hibernate 时根据 model 类会自动建立起表的结构（前提是先建立好数据库），以后加载 hibernate 时根据 model 类自动更新表结构，即使表结构改变了，但表中的行仍然存在，不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。[没表-创建-操作 | 有表-更新没有的属性列-操作]
# validate：每次加载 hibernate 时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。[启动验证表结构，验证不成功，项目启动失败]
spring.jpa.hibernate.ddl-auto=create
# 让注解生效(表设别名,字段设置别名)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# 配置数据库引擎为InnoDB
# 下面这行已经没有作用了
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#hibernate.dialect.storage_engine=innodb
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.open-in-view=true
spring.jpa.show-sql=true
# --------------------------------------------------------------------------------
# 分页参数默认从 1 开始
spring.data.web.pageable.one-indexed-parameters=true
# --------------------------------------------------------------------------------
#开启二级缓存
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#spring.jpa.properties.hibernate.cache.use_query_cache=true
##指定缓存provider
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.internal.JCacheRegionFactory
#spring.jpa.properties.hibernate.javax.cache.missing_cache_strategy=create
##spring.jpa.properties.javax.persistence.sharedCache.mode=ALL
#spring.jpa.properties.hibernate.cache.use_structured_entries=true
#spring.jpa.properties.hibernate.generate_statistics=false


